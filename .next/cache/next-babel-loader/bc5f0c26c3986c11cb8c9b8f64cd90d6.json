{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Link from '../../Link';\nimport { DarkModeButton } from '../DarkModeButton';\nimport { Tabs, Tab, Button, makeStyles, MenuItem, MenuList, ClickAwayListener, Grow, Paper, Popper } from '@material-ui/core/';\nimport { usePagesContext } from '../../contexts/PagesContext';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toolbarMargin: _objectSpread(_objectSpread({}, theme.mixins.toolbar), {}, {\n      marginBottom: '3em'\n    }),\n    tabContainer: {\n      marginLeft: 'auto'\n    },\n    tab: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n      minWidth: 10,\n      marginLeft: '10px'\n    }),\n    button: _objectSpread(_objectSpread({}, theme.typography.estimate), {}, {\n      borderRadius: '50px',\n      marginLeft: '50px',\n      color: 'white'\n    }),\n    menu: {\n      backgroundColor: theme.palette.primary.main,\n      color: 'white',\n      borderRadius: '0px',\n      zIndex: 1302\n    },\n    menuItem: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n      opacity: 0.7,\n      '&:hover': {\n        opacity: 1\n      },\n      '&.Mui-selected': {\n        opacity: 1\n      }\n    })\n  };\n});\n\nvar TabsMenu = function TabsMenu(props) {\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var _useState2 = useState(false),\n      menuOpen = _useState2[0],\n      setMenuOpen = _useState2[1];\n\n  var classes = useStyles();\n\n  var _usePagesContext = usePagesContext(),\n      pages = _usePagesContext.pages,\n      currentPageIndecies = _usePagesContext.currentPageIndecies,\n      setCurrentPageIndecies = _usePagesContext.setCurrentPageIndecies;\n\n  var handleTabChange = function handleTabChange(e, value) {// setCurrentPageIndecies([value, null])\n  };\n\n  var handleMenuClick = function handleMenuClick(event) {\n    setAnchorEl(event.currentTarget);\n    setMenuOpen(true);\n  };\n\n  var handleMenuClose = function handleMenuClose(event) {\n    setAnchorEl(null);\n    setMenuOpen(false);\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setMenuOpen(false);\n    }\n  };\n\n  var handleSubMenuClick = function handleSubMenuClick(event, parentIndex, index) {\n    setAnchorEl(null);\n    setMenuOpen(false); // setCurrentPageIndecies([parentIndex, index])\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Tabs, {\n    value: currentPageIndecies[0],\n    onChange: handleTabChange,\n    className: classes.tabContainer\n  }, pages.map(function (page) {\n    var hasChildren = page.children.length;\n    return __jsx(Tab, {\n      \"aria-owns\": hasChildren && anchorEl ? \"menu-\".concat(page.name) : undefined,\n      \"aria-haspopup\": hasChildren && anchorEl ? true : undefined,\n      onMouseOver: hasChildren ? function (event) {\n        return handleMenuClick(event);\n      } : undefined,\n      label: page.name,\n      className: classes.tab,\n      component: Link,\n      href: page.path,\n      key: page.path\n    });\n  })), pages.map(function (page, index) {\n    var hasChildren = page.children.length;\n    return hasChildren && anchorEl ? __jsx(Popper, {\n      open: menuOpen,\n      anchorEl: anchorEl,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      key: page.path,\n      keepMounted: true\n    }, function (_ref) {\n      var TransitionProps = _ref.TransitionProps,\n          placement = _ref.placement;\n      return __jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n        }\n      }), __jsx(Paper, {\n        classes: {\n          root: classes.menu\n        },\n        elevation: 0\n      }, __jsx(ClickAwayListener, {\n        onClickAway: handleMenuClose\n      }, __jsx(MenuList, {\n        disablePadding: true,\n        onMouseLeave: handleMenuClose,\n        autoFocusItem: false,\n        id: \"menu-\".concat(page.name),\n        onKeyDown: handleListKeyDown\n      }, page.children.map(function (childPage, childIndex) {\n        return __jsx(MenuItem, {\n          key: childPage.path,\n          onClick: function onClick(event) {\n            handleMenuClose();\n            handleTabChange(event, index);\n            handleSubMenuClick(event, index, childIndex);\n          },\n          component: Link,\n          href: childPage.path,\n          classes: {\n            root: classes.menuItem\n          },\n          selected: childIndex === currentPageIndecies[1] && index === currentPageIndecies[0]\n        }, childPage.name);\n      })))));\n    }) : '';\n  }), __jsx(DarkModeButton, null), __jsx(Button, {\n    component: Link,\n    href: \"/estimate\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button\n  }, \"Price Estimate\"));\n};\n\nexport default TabsMenu;","map":null,"metadata":{},"sourceType":"module"}