{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\ui\\\\parts\\\\QnA.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useLanguageContext } from '../../../src/contexts/LangContext';\nconst useStyles = makeStyles(theme => ({}));\n\nconst QnA = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const {\n    siteData,\n    language\n  } = useLanguageContext();\n  return __jsx(React.Fragment, null, siteData.faq.map((question, index) => __jsx(Accordion, {\n    expanded: expanded === `panel${index}`,\n    onChange: handleChange(`panel${index}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }\n    }),\n    \"aria-controls\": `panel${index}a-content`,\n    id: `panel${index}a-header`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, question.title)), __jsx(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, question.text)))));\n};\n\nexport default QnA;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/ui/parts/QnA.jsx"],"names":["React","useState","makeStyles","useTheme","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","useLanguageContext","useStyles","theme","QnA","props","classes","expanded","setExpanded","handleChange","panel","event","isExpanded","siteData","language","faq","map","question","index","title","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AAIA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK,EAAL,CAAN,CAA5B;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAM;AAAA,OAACY,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMgB,YAAY,GAAGC,KAAK,IAAI,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACnDJ,IAAAA,WAAW,CAACI,UAAU,GAAGF,KAAH,GAAW,KAAtB,CAAX;AACD,GAFD;;AAGA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBb,kBAAkB,EAAjD;AACA,SACE,4BACGY,QAAQ,CAACE,GAAT,CAAaC,GAAb,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAClB,MAAC,SAAD;AACE,IAAA,QAAQ,EAAEX,QAAQ,KAAM,QAAOW,KAAM,EADvC;AAEE,IAAA,QAAQ,EAAET,YAAY,CAAE,QAAOS,KAAM,EAAf,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,gBAAD;AACE,IAAA,UAAU,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd;AAEE,qBAAgB,QAAOA,KAAM,WAF/B;AAGE,IAAA,EAAE,EAAG,QAAOA,KAAM,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,KADZ,CALF,CAJF,EAaE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,QAAQ,CAACG,IADV,CADF,CAbF,CADC,CADH,CADF;AA0BD,CApCD;;AAsCA,eAAehB,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useTheme } from '@material-ui/core'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { useLanguageContext } from '../../../src/contexts/LangContext'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({}))\r\n\r\nconst QnA = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n  const { siteData, language } = useLanguageContext()\r\n  return (\r\n    <>\r\n      {siteData.faq.map((question, index) => \r\n      <Accordion\r\n        expanded={expanded === `panel${index}`}\r\n        onChange={handleChange(`panel${index}`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls={`panel${index}a-content`}\r\n          id={`panel${index}a-header`}\r\n        >\r\n          <Typography variant='h6'>\r\n            {question.title}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography variant='body1'>\r\n          {question.text}\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      )}\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default QnA\r\n"]},"metadata":{},"sourceType":"module"}