{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\ui\\\\parts\\\\ContactForm.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Button, Grid, TextField, useMediaQuery, useTheme, CircularProgress, Snackbar, Slide } from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport SendIcon from '@material-ui/icons/Send';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { event as GAevent } from '../../functions/gtag';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    verticalAlign: 'middle',\n    marginLeft: '1em'\n  },\n  errorIcon: {\n    color: red[500],\n    verticalAlign: 'middle',\n    marginLeft: '1em'\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  alert: {\n    zIndex: '9999'\n  }\n}));\n\nfunction TransitionLeft(props) {\n  return __jsx(Slide, _extends({}, props, {\n    direction: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst ContactForm = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: nameErr,\n    1: setNameErr\n  } = useState(null);\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: emailErr,\n    1: setEmailErr\n  } = useState(null);\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('');\n  const {\n    0: phoneErr,\n    1: setPhoneErr\n  } = useState(null);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: messageErr,\n    1: setMessageErr\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: sendError,\n    1: setSendError\n  } = useState(false);\n  const {\n    0: alert,\n    1: setAlert\n  } = useState({\n    open: false,\n    message: '',\n    color: ''\n  });\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  const fieldMapping = {\n    name: {\n      set: setName,\n      validate: /^[a-zA-Z א-ת\\-]+$/,\n      err: 'Invalid Name',\n      setErr: setNameErr,\n      isErr: nameErr\n    },\n    email: {\n      set: setEmail,\n      validate: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n      err: 'Invalid Email',\n      setErr: setEmailErr,\n      isErr: emailErr\n    },\n    phone: {\n      set: setPhone,\n      validate: /^(\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4}))+$/,\n      err: 'Invalid Phone',\n      setErr: setPhoneErr,\n      isErr: phoneErr\n    },\n    message: {\n      set: setMessage,\n      validate: /^[0-9@a-zA-Z א-ת\\-\\!]*$/,\n      err: 'Invalid Message',\n      setErr: setMessageErr,\n      isErr: messageErr\n    }\n  };\n\n  const handleInput = event => {\n    fieldMapping[event.target.id].set(event.target.value);\n\n    if (fieldMapping[event.target.id].isErr) {\n      checkError(event.target.id, event.target.value);\n    }\n  };\n\n  const handleInputBlur = event => {\n    checkError(event.target.id, event.target.value);\n  };\n\n  const checkError = (targetId, value) => {\n    let valid = '';\n    valid = fieldMapping[targetId].validate.test(value);\n    console.log(valid);\n    if (!valid) fieldMapping[targetId].setErr(true);else fieldMapping[targetId].setErr(false);\n    return valid;\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNameErr(null);\n    setEmail('');\n    setEmailErr(null);\n    setPhone('');\n    setPhoneErr(null);\n    setMessage('');\n  };\n\n  const checkAllErrors = () => {\n    let valid = true;\n\n    if (nameErr !== false) {\n      setNameErr(true);\n      valid = false;\n    }\n\n    if (emailErr !== false) {\n      setEmailErr(true);\n      valid = false;\n    }\n\n    if (phoneErr !== false) {\n      setPhoneErr(true);\n      valid = false;\n    }\n\n    return valid;\n  };\n\n  const handleSubmit = () => {\n    console.log(checkAllErrors());\n\n    if (checkAllErrors()) {\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n        setSendError(false);\n      }\n\n      axios.post('https://us-central1-vrfunteam-mailer.cloudfunctions.net/sendLead', {\n        name,\n        email,\n        phone,\n        message\n      }).then(res => {\n        setSuccess(true);\n        setLoading(false);\n        clearForm();\n        setAlert({\n          open: true,\n          backgroundColor: '#4BB543',\n          message: 'You message has been sent!'\n        });\n        GAevent({\n          category: 'Leads',\n          action: 'Lead Sent',\n          label: 'Website Conversions',\n          value: '1'\n        });\n      }).catch(err => {\n        setLoading(false);\n        setSendError(true);\n        setAlert({\n          open: true,\n          backgroundColor: '#FF3232',\n          message: 'There was an error sending your message'\n        });\n        GAevent({\n          category: 'Errors',\n          action: 'Lead Failed',\n          label: 'Website Conversions Errors',\n          value: '0'\n        });\n      });\n    }\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    variant: \"filled\",\n    fullWidth: true,\n    label: \"Name\",\n    id: \"name\",\n    value: name,\n    onChange: handleInput,\n    onBlur: handleInputBlur,\n    error: nameErr,\n    helperText: nameErr ? fieldMapping.name.err : '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    variant: \"filled\",\n    fullWidth: true,\n    label: \"Phone\",\n    id: \"phone\",\n    value: phone,\n    onChange: handleInput,\n    onBlur: handleInputBlur,\n    error: phoneErr,\n    helperText: phoneErr ? fieldMapping.phone.err : '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    variant: \"filled\",\n    fullWidth: true,\n    label: \"Email\",\n    id: \"email\",\n    value: email,\n    onChange: handleInput,\n    onBlur: handleInputBlur,\n    error: emailErr,\n    helperText: emailErr ? fieldMapping.email.err : '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    variant: \"filled\",\n    fullWidth: true,\n    placeholder: \"How can we help you?\",\n    multiline: true,\n    rows: 8,\n    id: \"message\",\n    value: props.message || message,\n    onChange: handleInput,\n    onBlur: handleInputBlur,\n    style: {\n      marginTop: '2em'\n    },\n    error: messageErr,\n    helperText: messageErr ? fieldMapping.message.err : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    item: true,\n    style: {\n      marginTop: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: nameErr || emailErr || phoneErr || messageErr || loading,\n    onClick: handleSubmit,\n    className: buttonClassname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, \"Send Message\", ' ', success ? __jsx(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }) : __jsx(SendIcon, {\n    style: {\n      marginLeft: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  })), loading && __jsx(CircularProgress, {\n    size: 30,\n    className: classes.fabProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }), sendError && __jsx(ErrorOutlineIcon, {\n    size: 30,\n    className: classes.errorIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }), __jsx(Snackbar, {\n    className: classes.alert,\n    open: alert.open,\n    message: alert.message,\n    ContentProps: {\n      style: {\n        backgroundColor: alert.backgroundColor\n      }\n    },\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    onClose: () => setAlert(_objectSpread(_objectSpread({}, alert), {}, {\n      open: false\n    })),\n    autoHideDuration: 4000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/ui/parts/ContactForm.jsx"],"names":["React","useState","axios","makeStyles","clsx","Button","Grid","TextField","useMediaQuery","useTheme","CircularProgress","Snackbar","Slide","green","red","SendIcon","CheckIcon","ErrorOutlineIcon","event","GAevent","useStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","fabProgress","color","verticalAlign","marginLeft","errorIcon","buttonProgress","top","left","marginTop","alert","zIndex","TransitionLeft","props","ContactForm","classes","name","setName","nameErr","setNameErr","email","setEmail","emailErr","setEmailErr","phone","setPhone","phoneErr","setPhoneErr","message","setMessage","messageErr","setMessageErr","loading","setLoading","success","setSuccess","sendError","setSendError","setAlert","open","buttonClassname","fieldMapping","set","validate","err","setErr","isErr","handleInput","target","id","value","checkError","handleInputBlur","targetId","valid","test","console","log","clearForm","checkAllErrors","handleSubmit","post","then","res","category","action","label","catch","style","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n  CircularProgress,\r\n  Snackbar,\r\n  Slide,\r\n} from '@material-ui/core'\r\nimport { green, red } from '@material-ui/core/colors'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport { event as GAevent } from '../../functions/gtag'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    verticalAlign: 'middle',\r\n    marginLeft: '1em',\r\n  },\r\n  errorIcon: {\r\n    color: red[500],\r\n    verticalAlign: 'middle',\r\n    marginLeft: '1em',\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  alert: {\r\n    zIndex: '9999',\r\n  },\r\n}))\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />\r\n}\r\n\r\nconst ContactForm = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [name, setName] = useState('')\r\n  const [nameErr, setNameErr] = useState(null)\r\n  const [email, setEmail] = useState('')\r\n  const [emailErr, setEmailErr] = useState(null)\r\n  const [phone, setPhone] = useState('')\r\n  const [phoneErr, setPhoneErr] = useState(null)\r\n  const [message, setMessage] = useState('')\r\n  const [messageErr, setMessageErr] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [sendError, setSendError] = useState(false)\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    message: '',\r\n    color: '',\r\n  })\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  })\r\n\r\n  const fieldMapping = {\r\n    name: {\r\n      set: setName,\r\n      validate: /^[a-zA-Z א-ת\\-]+$/,\r\n      err: 'Invalid Name',\r\n      setErr: setNameErr,\r\n      isErr: nameErr,\r\n    },\r\n\r\n    email: {\r\n      set: setEmail,\r\n      validate: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n      err: 'Invalid Email',\r\n      setErr: setEmailErr,\r\n      isErr: emailErr,\r\n    },\r\n    phone: {\r\n      set: setPhone,\r\n      validate: /^(\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4}))+$/,\r\n      err: 'Invalid Phone',\r\n      setErr: setPhoneErr,\r\n      isErr: phoneErr,\r\n    },\r\n    message: {\r\n      set: setMessage,\r\n      validate: /^[0-9@a-zA-Z א-ת\\-\\!]*$/,\r\n      err: 'Invalid Message',\r\n      setErr: setMessageErr,\r\n      isErr: messageErr,\r\n    },\r\n  }\r\n\r\n  const handleInput = event => {\r\n    fieldMapping[event.target.id].set(event.target.value)\r\n    if (fieldMapping[event.target.id].isErr) {\r\n      checkError(event.target.id, event.target.value)\r\n    }\r\n  }\r\n\r\n  const handleInputBlur = event => {\r\n    checkError(event.target.id, event.target.value)\r\n  }\r\n\r\n  const checkError = (targetId, value) => {\r\n    let valid = ''\r\n    valid = fieldMapping[targetId].validate.test(value)\r\n    console.log(valid)\r\n    if (!valid) fieldMapping[targetId].setErr(true)\r\n    else fieldMapping[targetId].setErr(false)\r\n    return valid\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setName('')\r\n    setNameErr(null)\r\n    setEmail('')\r\n    setEmailErr(null)\r\n    setPhone('')\r\n    setPhoneErr(null)\r\n    setMessage('')\r\n  }\r\n\r\n  const checkAllErrors = () => {\r\n    let valid = true\r\n    if (nameErr !== false) {\r\n      setNameErr(true)\r\n      valid = false\r\n    }\r\n    if (emailErr !== false) {\r\n      setEmailErr(true)\r\n      valid = false\r\n    }\r\n    if (phoneErr !== false) {\r\n      setPhoneErr(true)\r\n      valid = false\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    console.log(checkAllErrors())\r\n    if (checkAllErrors()) {\r\n      if (!loading) {\r\n        setSuccess(false)\r\n        setLoading(true)\r\n        setSendError(false)\r\n      }\r\n      axios\r\n        .post(\r\n          'https://us-central1-vrfunteam-mailer.cloudfunctions.net/sendLead',\r\n          { name, email, phone, message }\r\n        )\r\n        .then(res => {\r\n          setSuccess(true)\r\n          setLoading(false)\r\n          clearForm()\r\n          setAlert({\r\n            open: true,\r\n            backgroundColor: '#4BB543',\r\n            message: 'You message has been sent!',\r\n          })\r\n          GAevent({\r\n            category: 'Leads',\r\n            action: 'Lead Sent',\r\n            label: 'Website Conversions',\r\n            value: '1',\r\n          })\r\n        })\r\n        .catch(err => {\r\n          setLoading(false)\r\n          setSendError(true)\r\n          setAlert({\r\n            open: true,\r\n            backgroundColor: '#FF3232',\r\n            message: 'There was an error sending your message',\r\n          })\r\n          GAevent({\r\n            category: 'Errors',\r\n            action: 'Lead Failed',\r\n            label: 'Website Conversions Errors',\r\n            value: '0',\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container direction='column' justify='center'>\r\n      <Grid item>\r\n        <TextField\r\n          variant='filled'\r\n          fullWidth\r\n          label='Name'\r\n          id='name'\r\n          value={name}\r\n          onChange={handleInput}\r\n          onBlur={handleInputBlur}\r\n          error={nameErr}\r\n          helperText={nameErr ? fieldMapping.name.err : ''}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          variant='filled'\r\n          fullWidth\r\n          label='Phone'\r\n          id='phone'\r\n          value={phone}\r\n          onChange={handleInput}\r\n          onBlur={handleInputBlur}\r\n          error={phoneErr}\r\n          helperText={phoneErr ? fieldMapping.phone.err : ''}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          variant='filled'\r\n          fullWidth\r\n          label='Email'\r\n          id='email'\r\n          value={email}\r\n          onChange={handleInput}\r\n          onBlur={handleInputBlur}\r\n          error={emailErr}\r\n          helperText={emailErr ? fieldMapping.email.err : ''}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          variant='filled'\r\n          fullWidth\r\n          placeholder='How can we help you?'\r\n          multiline\r\n          rows={8}\r\n          id='message'\r\n          value={props.message || message}\r\n          onChange={handleInput}\r\n          onBlur={handleInputBlur}\r\n          style={{ marginTop: '2em' }}\r\n          error={messageErr}\r\n          helperText={messageErr ? fieldMapping.message.err : ''}\r\n        />\r\n      </Grid>\r\n      <Grid item style={{ marginTop: '1em' }}>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          disabled={nameErr || emailErr || phoneErr || messageErr || loading}\r\n          onClick={handleSubmit}\r\n          className={buttonClassname}\r\n        >\r\n          Send Message{' '}\r\n          {success ? (\r\n            <CheckIcon />\r\n          ) : (\r\n            <SendIcon style={{ marginLeft: '0.5em' }} />\r\n          )}\r\n        </Button>\r\n\r\n        {loading && (\r\n          <CircularProgress size={30} className={classes.fabProgress} />\r\n        )}\r\n        {sendError && (\r\n          <ErrorOutlineIcon size={30} className={classes.errorIcon} />\r\n        )}\r\n        <Snackbar\r\n          className={classes.alert}\r\n          open={alert.open}\r\n          message={alert.message}\r\n          ContentProps={{\r\n            style: {\r\n              backgroundColor: alert.backgroundColor,\r\n            },\r\n          }}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n          onClose={() => setAlert({ ...alert, open: false })}\r\n          autoHideDuration={4000}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}