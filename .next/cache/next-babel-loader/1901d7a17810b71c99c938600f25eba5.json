{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useLanguageContext } from '../../../src/contexts/LangContext';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar QnA = function QnA(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var handleChange = function handleChange(panel) {\n    return function (event, isExpanded) {\n      setExpanded(isExpanded ? panel : false);\n    };\n  };\n\n  var _useLanguageContext = useLanguageContext(),\n      siteData = _useLanguageContext.siteData,\n      language = _useLanguageContext.language;\n\n  return __jsx(React.Fragment, null, siteData.faq.data.map(function (question, index) {\n    return __jsx(Accordion, {\n      expanded: expanded === \"panel\".concat(index),\n      onChange: handleChange(\"panel\".concat(index))\n    }, __jsx(AccordionSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, null),\n      \"aria-controls\": \"panel\".concat(index, \"a-content\"),\n      id: \"panel\".concat(index, \"a-header\")\n    }, __jsx(Typography, {\n      variant: \"h6\"\n    }, question.title)), __jsx(AccordionDetails, null, __jsx(Typography, {\n      variant: \"body1\",\n      dangerouslySetInnerHTML: createMarkup(question['text'])\n    })));\n  }));\n};\n\nexport default QnA;\n\nfunction createMarkup(content) {\n  return {\n    __html: content\n  };\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}