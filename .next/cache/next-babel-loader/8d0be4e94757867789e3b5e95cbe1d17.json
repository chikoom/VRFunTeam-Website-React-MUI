{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\ui\\\\Header\\\\TabsMenu.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Link from '../../Link';\nimport { DarkModeButton } from '../DarkModeButton';\nimport { Tabs, Tab, Button, makeStyles, MenuItem, MenuList, ClickAwayListener, Grow, Paper, Popper } from '@material-ui/core/';\nimport { usePagesContext } from '../../contexts/PagesContext';\nimport { event as GAevent } from '../../functions/gtag';\nimport LanguageButton from '../LanguageButton';\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: _objectSpread(_objectSpread({}, theme.mixins.toolbar), {}, {\n    marginBottom: '3em'\n  }),\n  tabContainer: {\n    marginLeft: 'auto'\n  },\n  tab: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n    minWidth: 10,\n    marginLeft: '10px'\n  }),\n  button: _objectSpread(_objectSpread({}, theme.typography.estimate), {}, {\n    borderRadius: '50px',\n    marginLeft: '50px',\n    color: 'white'\n  }),\n  menu: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    borderRadius: '0px',\n    zIndex: 1302\n  },\n  menuItem: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n    opacity: 0.7,\n    '&:hover': {\n      opacity: 1\n    },\n    '&.Mui-selected': {\n      opacity: 1\n    }\n  })\n}));\n\nconst TabsMenu = props => {\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: menuOpen,\n    1: setMenuOpen\n  } = useState(false);\n  const classes = useStyles();\n  const {\n    pages,\n    currentPageIndecies,\n    setCurrentPageIndecies\n  } = usePagesContext();\n\n  const handleTabChange = (e, value) => {// setCurrentPageIndecies([value, null])\n  };\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n    setMenuOpen(true);\n  };\n\n  const handleMenuClose = event => {\n    setAnchorEl(null);\n    setMenuOpen(false);\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setMenuOpen(false);\n    }\n  };\n\n  const handleSubMenuClick = (event, parentIndex, index) => {\n    setAnchorEl(null);\n    setMenuOpen(false); // setCurrentPageIndecies([parentIndex, index])\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Tabs, {\n    value: currentPageIndecies[0],\n    onChange: handleTabChange,\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, pages.map(page => {\n    const hasChildren = page.children.length;\n    return __jsx(Tab, {\n      \"aria-owns\": hasChildren && anchorEl ? `menu-${page.name}` : undefined,\n      \"aria-haspopup\": hasChildren && anchorEl ? true : undefined,\n      onMouseOver: hasChildren ? event => handleMenuClick(event) : undefined,\n      label: page.name,\n      className: classes.tab,\n      component: Link,\n      href: page.path,\n      key: page.path,\n      onClick: () => GAevent({\n        category: 'Menu Buttons',\n        action: `Desktop Tabs ${page.name} Click`,\n        label: 'Website Actions',\n        value: '0'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    });\n  })), pages.map((page, index) => {\n    const hasChildren = page.children.length;\n    return hasChildren && anchorEl ? __jsx(Popper, {\n      open: menuOpen,\n      anchorEl: anchorEl,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      key: page.path,\n      keepMounted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, ({\n      TransitionProps,\n      placement\n    }) => __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), __jsx(Paper, {\n      classes: {\n        root: classes.menu\n      },\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, __jsx(ClickAwayListener, {\n      onClickAway: handleMenuClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, __jsx(MenuList, {\n      disablePadding: true,\n      onMouseLeave: handleMenuClose,\n      autoFocusItem: false,\n      id: `menu-${page.name}`,\n      onKeyDown: handleListKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, page.children.map((childPage, childIndex) => __jsx(MenuItem, {\n      key: childPage.path,\n      onClick: event => {\n        handleMenuClose();\n        handleTabChange(event, index);\n        handleSubMenuClick(event, index, childIndex);\n        GAevent({\n          category: 'Menu Buttons',\n          action: `Desktop Tabs ${childPage.name} Click`,\n          label: 'Website Actions',\n          value: '0'\n        });\n      },\n      component: Link,\n      href: childPage.path,\n      classes: {\n        root: classes.menuItem\n      },\n      selected: childIndex === currentPageIndecies[1] && index === currentPageIndecies[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, childPage.name))))))) : '';\n  }), __jsx(DarkModeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), __jsx(LanguageButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    component: Link,\n    href: \"/estimate\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: () => GAevent({\n      category: 'Estimate',\n      action: 'Desktop Tabs Special Estimate Click',\n      label: 'Website Actions',\n      value: '0'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, \"Price Estimate\"));\n};\n\nexport default TabsMenu;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/ui/Header/TabsMenu.jsx"],"names":["React","useState","Link","DarkModeButton","Tabs","Tab","Button","makeStyles","MenuItem","MenuList","ClickAwayListener","Grow","Paper","Popper","usePagesContext","event","GAevent","LanguageButton","useStyles","theme","toolbarMargin","mixins","toolbar","marginBottom","tabContainer","marginLeft","tab","typography","minWidth","button","estimate","borderRadius","color","menu","backgroundColor","palette","primary","main","zIndex","menuItem","opacity","TabsMenu","props","anchorEl","setAnchorEl","menuOpen","setMenuOpen","classes","pages","currentPageIndecies","setCurrentPageIndecies","handleTabChange","e","value","handleMenuClick","currentTarget","handleMenuClose","handleListKeyDown","key","preventDefault","handleSubMenuClick","parentIndex","index","map","page","hasChildren","children","length","name","undefined","path","category","action","label","TransitionProps","placement","transformOrigin","root","childPage","childIndex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Link from '../../Link'\r\nimport { DarkModeButton } from '../DarkModeButton'\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  makeStyles,\r\n  MenuItem,\r\n  MenuList,\r\n  ClickAwayListener,\r\n  Grow,\r\n  Paper,\r\n  Popper,\r\n} from '@material-ui/core/'\r\nimport { usePagesContext } from '../../contexts/PagesContext'\r\nimport { event as GAevent } from '../../functions/gtag'\r\nimport LanguageButton from '../LanguageButton'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: '3em',\r\n  },\r\n  tabContainer: {\r\n    marginLeft: 'auto',\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: '10px',\r\n  },\r\n  button: {\r\n    ...theme.typography.estimate,\r\n    borderRadius: '50px',\r\n    marginLeft: '50px',\r\n    color: 'white',\r\n  },\r\n  menu: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: 'white',\r\n    borderRadius: '0px',\r\n    zIndex: 1302,\r\n  },\r\n  menuItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n    '&.Mui-selected': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))\r\n\r\nconst TabsMenu = props => {\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n  const classes = useStyles()\r\n  const {\r\n    pages,\r\n    currentPageIndecies,\r\n    setCurrentPageIndecies,\r\n  } = usePagesContext()\r\n\r\n  const handleTabChange = (e, value) => {\r\n    // setCurrentPageIndecies([value, null])\r\n  }\r\n  const handleMenuClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n    setMenuOpen(true)\r\n  }\r\n  const handleMenuClose = event => {\r\n    setAnchorEl(null)\r\n    setMenuOpen(false)\r\n  }\r\n  const handleListKeyDown = event => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault()\r\n      setMenuOpen(false)\r\n    }\r\n  }\r\n  const handleSubMenuClick = (event, parentIndex, index) => {\r\n    setAnchorEl(null)\r\n    setMenuOpen(false)\r\n    // setCurrentPageIndecies([parentIndex, index])\r\n  }\r\n  return (\r\n    <>\r\n      <Tabs\r\n        value={currentPageIndecies[0]}\r\n        onChange={handleTabChange}\r\n        className={classes.tabContainer}\r\n      >\r\n        {pages.map(page => {\r\n          const hasChildren = page.children.length\r\n          return (\r\n            <Tab\r\n              aria-owns={\r\n                hasChildren && anchorEl ? `menu-${page.name}` : undefined\r\n              }\r\n              aria-haspopup={hasChildren && anchorEl ? true : undefined}\r\n              onMouseOver={\r\n                hasChildren ? event => handleMenuClick(event) : undefined\r\n              }\r\n              label={page.name}\r\n              className={classes.tab}\r\n              component={Link}\r\n              href={page.path}\r\n              key={page.path}\r\n              onClick={() =>\r\n                GAevent({\r\n                  category: 'Menu Buttons',\r\n                  action: `Desktop Tabs ${page.name} Click`,\r\n                  label: 'Website Actions',\r\n                  value: '0',\r\n                })\r\n              }\r\n            />\r\n          )\r\n        })}\r\n      </Tabs>\r\n      {pages.map((page, index) => {\r\n        const hasChildren = page.children.length\r\n        return hasChildren && anchorEl ? (\r\n          <Popper\r\n            open={menuOpen}\r\n            anchorEl={anchorEl}\r\n            role={undefined}\r\n            transition\r\n            disablePortal\r\n            key={page.path}\r\n            keepMounted\r\n          >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                  transformOrigin:\r\n                    placement === 'bottom' ? 'center top' : 'center bottom',\r\n                }}\r\n              >\r\n                <Paper classes={{ root: classes.menu }} elevation={0}>\r\n                  <ClickAwayListener onClickAway={handleMenuClose}>\r\n                    <MenuList\r\n                      disablePadding\r\n                      onMouseLeave={handleMenuClose}\r\n                      autoFocusItem={false}\r\n                      id={`menu-${page.name}`}\r\n                      onKeyDown={handleListKeyDown}\r\n                    >\r\n                      {page.children.map((childPage, childIndex) => (\r\n                        <MenuItem\r\n                          key={childPage.path}\r\n                          onClick={event => {\r\n                            handleMenuClose()\r\n                            handleTabChange(event, index)\r\n                            handleSubMenuClick(event, index, childIndex)\r\n                            GAevent({\r\n                              category: 'Menu Buttons',\r\n                              action: `Desktop Tabs ${childPage.name} Click`,\r\n                              label: 'Website Actions',\r\n                              value: '0',\r\n                            })\r\n                          }}\r\n                          component={Link}\r\n                          href={childPage.path}\r\n                          classes={{ root: classes.menuItem }}\r\n                          selected={\r\n                            childIndex === currentPageIndecies[1] &&\r\n                            index === currentPageIndecies[0]\r\n                          }\r\n                        >\r\n                          {childPage.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        ) : (\r\n          ''\r\n        )\r\n      })}\r\n      <DarkModeButton />\r\n      <LanguageButton />\r\n      <Button\r\n        component={Link}\r\n        href='/estimate'\r\n        variant='contained'\r\n        color='secondary'\r\n        className={classes.button}\r\n        onClick={() =>\r\n          GAevent({\r\n            category: 'Estimate',\r\n            action: 'Desktop Tabs Special Estimate Click',\r\n            label: 'Website Actions',\r\n            value: '0',\r\n          })\r\n        }\r\n      >\r\n        Price Estimate\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TabsMenu\r\n"]},"metadata":{},"sourceType":"module"}