{"ast":null,"code":"var _s = $RefreshSig$(),\n    _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\contexts\\\\LangContext.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { siteData } from './site_data';\nvar languages = ['en', 'he'];\nvar LangContext = /*#__PURE__*/React.createContext();\nexport function useLanguageContext() {\n  _s();\n\n  return useContext(LangContext);\n}\n\n_s(useLanguageContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar getQueryLanguage = function getQueryLanguage(qString) {\n  return qString.includes('ln=he') ? 'he' : 'en';\n};\n\nexport function LangProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState(document.window ? getQueryLanguage(document.window.location.search) : 'en'),\n      language = _useState[0],\n      setLanguage = _useState[1];\n\n  var changeLanguageTo = function changeLanguageTo(langString) {\n    console.log('Changing language to ', langString);\n    setLanguage(langString);\n  };\n\n  var contextValue = {\n    siteData: siteData[language],\n    language: language,\n    languages: languages,\n    changeLanguageTo: changeLanguageTo\n  };\n  return __jsx(LangContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_s2(LangProvider, \"RDe+g3Y024VOMcbZWosIE3Y0IlY=\");\n\n_c = LangProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangProvider\");","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/contexts/LangContext.js"],"names":["React","useContext","useState","siteData","languages","LangContext","createContext","useLanguageContext","getQueryLanguage","qString","includes","LangProvider","children","document","window","location","search","language","setLanguage","changeLanguageTo","langString","console","log","contextValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,IAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,CAAlB;AAEA,IAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AACA,OAAO,SAASC,kBAAT,GAA8B;AAAA;;AACnC,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;;GAFeE,kB;;AAIhB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,OAAO,EAAI;AAClC,SAAOA,OAAO,CAACC,QAAR,CAAiB,OAAjB,IAA4B,IAA5B,GAAmC,IAA1C;AACD,CAFD;;AAIA,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACTV,QAAQ,CACtCW,QAAQ,CAACC,MAAT,GAAkBN,gBAAgB,CAACK,QAAQ,CAACC,MAAT,CAAgBC,QAAhB,CAAyBC,MAA1B,CAAlC,GAAsE,IADhC,CADC;AAAA,MAClCC,QADkC;AAAA,MACxBC,WADwB;;AAIzC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,UAAU,EAAI;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,UAArC;AACAF,IAAAA,WAAW,CAACE,UAAD,CAAX;AACD,GAHD;;AAIA,MAAMG,YAAY,GAAG;AACnBpB,IAAAA,QAAQ,EAAEA,QAAQ,CAACc,QAAD,CADC;AAEnBA,IAAAA,QAAQ,EAARA,QAFmB;AAGnBb,IAAAA,SAAS,EAATA,SAHmB;AAInBe,IAAAA,gBAAgB,EAAhBA;AAJmB,GAArB;AAMA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CX,QAA5C,CADF;AAGD;;IAjBeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { siteData } from './site_data'\r\nconst languages = ['en', 'he']\r\n\r\nconst LangContext = React.createContext()\r\nexport function useLanguageContext() {\r\n  return useContext(LangContext)\r\n}\r\n\r\nconst getQueryLanguage = qString => {\r\n  return qString.includes('ln=he') ? 'he' : 'en'\r\n}\r\n\r\nexport function LangProvider({ children }) {\r\n  const [language, setLanguage] = useState(\r\n    document.window ? getQueryLanguage(document.window.location.search) : 'en'\r\n  )\r\n  const changeLanguageTo = langString => {\r\n    console.log('Changing language to ', langString)\r\n    setLanguage(langString)\r\n  }\r\n  const contextValue = {\r\n    siteData: siteData[language],\r\n    language,\r\n    languages,\r\n    changeLanguageTo,\r\n  }\r\n  return (\r\n    <LangContext.Provider value={contextValue}>{children}</LangContext.Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}