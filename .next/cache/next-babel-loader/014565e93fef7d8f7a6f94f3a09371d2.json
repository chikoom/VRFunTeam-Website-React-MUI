{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\ui\\\\parts\\\\CardsSlider.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180\n  },\n  wrapper: {\n    width: 100 + theme.spacing(2)\n  },\n  paper: {\n    zIndex: 1,\n    position: 'relative',\n    margin: theme.spacing(1)\n  }\n}));\nconst elements = [{\n  content: `It is a long established fact that a reader will be distracted\n    by the readable content of a page when looking at its layout.`,\n  subContent: `Idan Baron | SEO Chikoom inc`\n}, {\n  content: `Mow Mow Mow.`,\n  subContent: `Kundofoni | SEO FancyFeast inc`\n}, {\n  content: `lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum `,\n  subContent: `Moshiko MushMush | SEO DigiDigi inc`\n}];\n\nconst CardsSlider = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: slides,\n    1: setSlides\n  } = useState([]);\n  const {\n    0: slideDirection,\n    1: setSlideDirection\n  } = useState('right');\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(0);\n  const {\n    0: currentInterval,\n    1: setCurrentInterval\n  } = useState(null);\n  const {\n    0: slideEnter,\n    1: setSlideEnter\n  } = useState(true); // const interval = setInterval(() => {\n  //   if (currentIndex === elements.length - 1) setCurrentIndex(0)\n  //   else setCurrentIndex(currentIndex + 1)\n  // }, 2000)\n\n  useEffect(() => {}, []);\n\n  const handleChange = () => {\n    setChecked(prev => !prev);\n  }; // setTimeout(() => {\n  //   if (currentIndex === elements.length - 1) setCurrentIndex(0)\n  //   else setCurrentIndex(currentIndex + 1)\n  // }, 5000)\n\n\n  return __jsx(Grid, {\n    container: true,\n    direction: 'row-reverse',\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, elements.map((element, index) => __jsx(Slide, {\n    key: element.subContent,\n    direction: slideEnter ? 'left' : 'right',\n    in: currentIndex === index && slideEnter,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    timeout: {\n      enter: 1000,\n      exit: 500\n    },\n    onEntered: () => {\n      setTimeout(() => {\n        setSlideEnter(false);\n      }, 3500);\n    },\n    onExited: () => {\n      if (currentIndex === elements.length - 1) setCurrentIndex(0);else setCurrentIndex(currentIndex + 1);\n      setSlideEnter(true);\n    } // style={{ position: 'absolute', width: '50%' }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, element.content), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, element.subContent)))))))));\n};\n\nexport default CardsSlider;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/ui/parts/CardsSlider.jsx"],"names":["React","useEffect","useState","Switch","Paper","Slide","FormControlLabel","makeStyles","useTheme","Card","CardContent","Divider","Grid","Typography","useStyles","theme","root","height","wrapper","width","spacing","paper","zIndex","position","margin","elements","content","subContent","CardsSlider","props","classes","slides","setSlides","slideDirection","setSlideDirection","currentIndex","setCurrentIndex","currentInterval","setCurrentInterval","slideEnter","setSlideEnter","handleChange","setChecked","prev","map","element","index","enter","exit","setTimeout","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  wrapper: {\r\n    width: 100 + theme.spacing(2),\r\n  },\r\n  paper: {\r\n    zIndex: 1,\r\n    position: 'relative',\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst elements = [\r\n  {\r\n    content: `It is a long established fact that a reader will be distracted\r\n    by the readable content of a page when looking at its layout.`,\r\n    subContent: `Idan Baron | SEO Chikoom inc`,\r\n  },\r\n  {\r\n    content: `Mow Mow Mow.`,\r\n    subContent: `Kundofoni | SEO FancyFeast inc`,\r\n  },\r\n  {\r\n    content: `lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum `,\r\n    subContent: `Moshiko MushMush | SEO DigiDigi inc`,\r\n  },\r\n]\r\n\r\nconst CardsSlider = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [slides, setSlides] = useState([])\r\n  const [slideDirection, setSlideDirection] = useState('right')\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n  const [currentInterval, setCurrentInterval] = useState(null)\r\n  const [slideEnter, setSlideEnter] = useState(true)\r\n\r\n  // const interval = setInterval(() => {\r\n  //   if (currentIndex === elements.length - 1) setCurrentIndex(0)\r\n  //   else setCurrentIndex(currentIndex + 1)\r\n  // }, 2000)\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  const handleChange = () => {\r\n    setChecked(prev => !prev)\r\n  }\r\n\r\n  // setTimeout(() => {\r\n  //   if (currentIndex === elements.length - 1) setCurrentIndex(0)\r\n  //   else setCurrentIndex(currentIndex + 1)\r\n  // }, 5000)\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction={'row-reverse'}\r\n      alignItems='center'\r\n      justify='center'\r\n    >\r\n      <Grid item md={6} xs={8}>\r\n        {elements.map((element, index) => (\r\n          <Slide\r\n            key={element.subContent}\r\n            direction={slideEnter ? 'left' : 'right'}\r\n            in={currentIndex === index && slideEnter}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={{\r\n              enter: 1000,\r\n              exit: 500,\r\n            }}\r\n            onEntered={() => {\r\n              setTimeout(() => {\r\n                setSlideEnter(false)\r\n              }, 3500)\r\n            }}\r\n            onExited={() => {\r\n              if (currentIndex === elements.length - 1) setCurrentIndex(0)\r\n              else setCurrentIndex(currentIndex + 1)\r\n              setSlideEnter(true)\r\n            }}\r\n            // style={{ position: 'absolute', width: '50%' }}\r\n          >\r\n            <Card>\r\n              <CardContent>\r\n                <Grid container direction='column'>\r\n                  <Grid item>\r\n                    <Typography variant='body1'>{element.content}</Typography>\r\n                    <Divider />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant='subtitle2'>\r\n                      {element.subContent}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Slide>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CardsSlider\r\n"]},"metadata":{},"sourceType":"module"}