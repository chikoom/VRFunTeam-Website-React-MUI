{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\pages\\\\estimate.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/Head';\nimport Lottie from 'react-lottie';\nimport clsx from 'clsx';\nimport { Avatar, CardMedia, Divider, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport Slider from '@material-ui/core/Slider';\nimport { usePagesContext } from '../src/contexts/PagesContext';\nimport estimateAnimation from '../src/animations/estimate.json';\nimport ContactForm from '../src/ui/parts/ContactForm';\nimport PageHeader from '../src/ui/PageHeader';\nconst useStyles = makeStyles(theme => ({\n  animationContainer: {\n    overflow: 'hidden',\n    height: '80%'\n  },\n  animation: {\n    marginTop: '-25%',\n    overflow: 'hidden'\n  },\n  imgButton: {\n    cursor: 'pointer'\n  },\n  optionSelected: {\n    backgroundColor: theme.palette.primary.light\n  },\n  playerIcon: {\n    width: '100px',\n    height: '100px',\n    marginLeft: '2em'\n  },\n  optionTitle: {\n    fontWeight: '400',\n    fontSize: '1em'\n  },\n  subHeading: {\n    fontWeight: '400',\n    marginTop: '2em',\n    marginBottom: '2em'\n  }\n}));\nconst animationOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: estimateAnimation,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMin meet',\n    imagePreserveAspectRatio: 'xMidYMin meet'\n  }\n};\nconst questions = [{\n  id: 1,\n  title: 'What are you looking for?',\n  subtitle: null,\n  active: true,\n  options: [{\n    id: 1,\n    title: 'Private & Family',\n    subtitle: null,\n    icon: '/assets/icon-teamwork.svg',\n    iconAlt: 'Private & Family',\n    selected: false,\n    cost: 1\n  }, {\n    id: 2,\n    title: 'Comapny Events',\n    subtitle: null,\n    icon: '/assets/icon-creative.svg',\n    iconAlt: 'Comapny Events',\n    selected: false,\n    cost: 1.2\n  }, {\n    id: 3,\n    title: `Exhibition & Conference`,\n    subtitle: null,\n    icon: '/assets/icon-fun.svg',\n    iconAlt: `Exhibition & Conference`,\n    selected: false,\n    cost: 1.5\n  }]\n}];\nconst hoursMarks = [{\n  value: 1,\n  label: '1hrs'\n}, {\n  value: 2,\n  label: '2hrs'\n}, {\n  value: 3,\n  label: '3hrs'\n}, {\n  value: 4,\n  label: '4hrs'\n}, {\n  value: 5,\n  label: '5hrs'\n}, {\n  value: 6,\n  label: '6hrs'\n}, {\n  value: 7,\n  label: '7hrs'\n}, {\n  value: 8,\n  label: '8hrs'\n}, {\n  value: 9,\n  label: '9hrs'\n}, {\n  value: 10,\n  label: '10+'\n}];\n\nconst Estimate = props => {\n  const classes = useStyles();\n  const {\n    setPageIndecies\n  } = usePagesContext();\n  const {\n    0: selectedId,\n    1: setSelectedId\n  } = useState(0);\n  const {\n    0: playerIconImg,\n    1: setPlayerIconImg\n  } = useState('/assets/player-icons-02.svg');\n  const {\n    0: priceData,\n    1: setPriceData\n  } = useState({\n    eventType: '',\n    eventCost: 0,\n    players: 2,\n    hours: 1\n  });\n\n  const createMsg = () => {\n    return `Hello VRFunTeam! I would like more details about a ${priceData.eventType} event, with ${priceData.players} participants, for ${priceData.hours} hours. I got a price estimate of $${calculatePrice()}. Thank you!`;\n  };\n\n  const calculatePrice = () => {\n    const {\n      eventCost,\n      players,\n      hours\n    } = priceData;\n    return Math.floor(eventCost * players * 25 * hours);\n  };\n\n  const participantLabel = value => {\n    const playerImg = value === 1 ? '/assets/player-icons-01.svg' : value === 2 ? '/assets/player-icons-02.svg' : value <= 5 ? '/assets/player-icons-03.svg' : '/assets/player-icons-04.svg';\n    setPlayerIconImg(playerImg);\n    const returnValue = value === 20 ? '21+' : value;\n    return returnValue;\n  };\n\n  const hoursLabel = value => {\n    return value === 10 ? '10+' : value;\n  };\n\n  const handleOptionClick = (id, cost, title) => {\n    setPriceData(_objectSpread(_objectSpread({}, priceData), {}, {\n      eventType: title,\n      eventCost: cost\n    }));\n    setSelectedId(id);\n  };\n\n  useEffect(() => {\n    setPageIndecies('/estimate');\n  }, []);\n  return __jsx(PageHeader, {\n    header: \"Price Estimate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    key: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, \"Price Estimate for VR events | VRFunTeam\")), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.animationContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, __jsx(Lottie, {\n    options: animationOptions,\n    height: \"50%\",\n    width: \"70%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, questions.filter(question => question.active === true).map(question => __jsx(React.Fragment, {\n    key: question.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    className: classes.subHeading,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \"Choose your type of event\")), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, question.options.map(option => __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    xs: true,\n    className: clsx(classes.imgButton, {\n      [classes.optionSelected]: selectedId === option.id\n    }),\n    onClick: () => handleOptionClick(option.id, option.cost, option.title),\n    key: option.id,\n    style: {\n      maxWidth: '250px',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    className: classes.optionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, option.title)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: option.icon,\n    alt: \"blablaba\",\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }))))))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    className: classes.subHeading,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"How many players?\")), __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(Slider, {\n    min: 1,\n    max: 20,\n    defaultValue: 2,\n    valueLabelFormat: participantLabel,\n    getAriaValueText: participantLabel,\n    \"aria-labelledby\": \"discrete-slider-always\",\n    step: 1,\n    marks: null,\n    valueLabelDisplay: \"on\",\n    style: {\n      width: '100%'\n    },\n    onChange: (event, value) => setPriceData(_objectSpread(_objectSpread({}, priceData), {}, {\n      players: parseInt(value)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: playerIconImg,\n    alt: \"players\",\n    className: classes.playerIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    className: classes.subHeading,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"How long would you play?\")), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: '2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, __jsx(Slider, {\n    min: 1,\n    max: 10,\n    defaultValue: 1,\n    valueLabelFormat: hoursLabel,\n    getAriaValueText: hoursLabel,\n    \"aria-labelledby\": \"discrete-slider-always\",\n    step: 1,\n    marks: hoursMarks,\n    valueLabelDisplay: \"on\",\n    style: {\n      width: '100%'\n    },\n    onChange: (event, value) => setPriceData(_objectSpread(_objectSpread({}, priceData), {}, {\n      hours: parseInt(value)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: '3em',\n      marginBottom: '3em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, \"Price Est:\")), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, `$${calculatePrice()}`))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginBottom: '5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, __jsx(ContactForm, {\n    message: createMsg(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Estimate;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/pages/estimate.jsx"],"names":["React","useEffect","useState","Head","Lottie","clsx","Avatar","CardMedia","Divider","Grid","makeStyles","Paper","Typography","Slider","usePagesContext","estimateAnimation","ContactForm","PageHeader","useStyles","theme","animationContainer","overflow","height","animation","marginTop","imgButton","cursor","optionSelected","backgroundColor","palette","primary","light","playerIcon","width","marginLeft","optionTitle","fontWeight","fontSize","subHeading","marginBottom","animationOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","imagePreserveAspectRatio","questions","id","title","subtitle","active","options","icon","iconAlt","selected","cost","hoursMarks","value","label","Estimate","props","classes","setPageIndecies","selectedId","setSelectedId","playerIconImg","setPlayerIconImg","priceData","setPriceData","eventType","eventCost","players","hours","createMsg","calculatePrice","Math","floor","participantLabel","playerImg","returnValue","hoursLabel","handleOptionClick","filter","question","map","option","maxWidth","padding","event","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Head from 'next/Head'\r\n\r\nimport Lottie from 'react-lottie'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Avatar,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport { usePagesContext } from '../src/contexts/PagesContext'\r\nimport estimateAnimation from '../src/animations/estimate.json'\r\nimport ContactForm from '../src/ui/parts/ContactForm'\r\nimport PageHeader from '../src/ui/PageHeader'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  animationContainer: {\r\n    overflow: 'hidden',\r\n    height: '80%',\r\n  },\r\n  animation: {\r\n    marginTop: '-25%',\r\n    overflow: 'hidden',\r\n  },\r\n  imgButton: {\r\n    cursor: 'pointer',\r\n  },\r\n  optionSelected: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n  playerIcon: {\r\n    width: '100px',\r\n    height: '100px',\r\n    marginLeft: '2em',\r\n  },\r\n  optionTitle: {\r\n    fontWeight: '400',\r\n    fontSize: '1em',\r\n  },\r\n  subHeading: {\r\n    fontWeight: '400',\r\n    marginTop: '2em',\r\n    marginBottom: '2em',\r\n  },\r\n}))\r\nconst animationOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: estimateAnimation,\r\n  rendererSettings: {\r\n    preserveAspectRatio: 'xMidYMin meet',\r\n    imagePreserveAspectRatio: 'xMidYMin meet',\r\n  },\r\n}\r\n\r\nconst questions = [\r\n  {\r\n    id: 1,\r\n    title: 'What are you looking for?',\r\n    subtitle: null,\r\n    active: true,\r\n    options: [\r\n      {\r\n        id: 1,\r\n        title: 'Private & Family',\r\n        subtitle: null,\r\n        icon: '/assets/icon-teamwork.svg',\r\n        iconAlt: 'Private & Family',\r\n        selected: false,\r\n        cost: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Comapny Events',\r\n        subtitle: null,\r\n        icon: '/assets/icon-creative.svg',\r\n        iconAlt: 'Comapny Events',\r\n        selected: false,\r\n        cost: 1.2,\r\n      },\r\n      {\r\n        id: 3,\r\n        title: `Exhibition & Conference`,\r\n        subtitle: null,\r\n        icon: '/assets/icon-fun.svg',\r\n        iconAlt: `Exhibition & Conference`,\r\n        selected: false,\r\n        cost: 1.5,\r\n      },\r\n    ],\r\n  },\r\n]\r\nconst hoursMarks = [\r\n  {\r\n    value: 1,\r\n    label: '1hrs',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: '2hrs',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: '3hrs',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4hrs',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5hrs',\r\n  },\r\n  {\r\n    value: 6,\r\n    label: '6hrs',\r\n  },\r\n  {\r\n    value: 7,\r\n    label: '7hrs',\r\n  },\r\n  {\r\n    value: 8,\r\n    label: '8hrs',\r\n  },\r\n  {\r\n    value: 9,\r\n    label: '9hrs',\r\n  },\r\n  {\r\n    value: 10,\r\n    label: '10+',\r\n  },\r\n]\r\n\r\nconst Estimate = props => {\r\n  const classes = useStyles()\r\n  const { setPageIndecies } = usePagesContext()\r\n  const [selectedId, setSelectedId] = useState(0)\r\n  const [playerIconImg, setPlayerIconImg] = useState(\r\n    '/assets/player-icons-02.svg'\r\n  )\r\n  const [priceData, setPriceData] = useState({\r\n    eventType: '',\r\n    eventCost: 0,\r\n    players: 2,\r\n    hours: 1,\r\n  })\r\n  const createMsg = () => {\r\n    return `Hello VRFunTeam! I would like more details about a ${\r\n      priceData.eventType\r\n    } event, with ${priceData.players} participants, for ${\r\n      priceData.hours\r\n    } hours. I got a price estimate of $${calculatePrice()}. Thank you!`\r\n  }\r\n\r\n  const calculatePrice = () => {\r\n    const { eventCost, players, hours } = priceData\r\n    return Math.floor(eventCost * players * 25 * hours)\r\n  }\r\n  const participantLabel = value => {\r\n    const playerImg =\r\n      value === 1\r\n        ? '/assets/player-icons-01.svg'\r\n        : value === 2\r\n        ? '/assets/player-icons-02.svg'\r\n        : value <= 5\r\n        ? '/assets/player-icons-03.svg'\r\n        : '/assets/player-icons-04.svg'\r\n\r\n    setPlayerIconImg(playerImg)\r\n    const returnValue = value === 20 ? '21+' : value\r\n    return returnValue\r\n  }\r\n\r\n  const hoursLabel = value => {\r\n    return value === 10 ? '10+' : value\r\n  }\r\n\r\n  const handleOptionClick = (id, cost, title) => {\r\n    setPriceData({\r\n      ...priceData,\r\n      eventType: title,\r\n      eventCost: cost,\r\n    })\r\n    setSelectedId(id)\r\n  }\r\n  useEffect(() => {\r\n    setPageIndecies('/estimate')\r\n  }, [])\r\n  return (\r\n    <PageHeader header='Price Estimate'>\r\n      <Head>\r\n        <title key='title'>Price Estimate for VR events | VRFunTeam</title>\r\n      </Head>\r\n      <Grid container justify='center'>\r\n        <Grid item container direction='column' md={3}>\r\n          <Grid item className={classes.animationContainer}>\r\n            <Grid item className={classes.animation}>\r\n              <Lottie options={animationOptions} height='50%' width='70%' />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction='column' md={7}>\r\n          {questions\r\n            .filter(question => question.active === true)\r\n            .map(question => (\r\n              <React.Fragment key={question.id}>\r\n                <Grid item container justify='center'>\r\n                  <Typography\r\n                    variant='h5'\r\n                    align='center'\r\n                    className={classes.subHeading}\r\n                    gutterBottom\r\n                  >\r\n                    Choose your type of event\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item container justify='center'>\r\n                  {question.options.map(option => (\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      direction='column'\r\n                      xs\r\n                      className={clsx(classes.imgButton, {\r\n                        [classes.optionSelected]: selectedId === option.id,\r\n                      })}\r\n                      onClick={() =>\r\n                        handleOptionClick(option.id, option.cost, option.title)\r\n                      }\r\n                      key={option.id}\r\n                      style={{ maxWidth: '250px', padding: '1em' }}\r\n                    >\r\n                      <Grid item>\r\n                        <Typography\r\n                          variant='h6'\r\n                          align='center'\r\n                          className={classes.optionTitle}\r\n                        >\r\n                          {option.title}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <img\r\n                          src={option.icon}\r\n                          alt='blablaba'\r\n                          width='100%'\r\n                          height='100%'\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          <Grid item container justify='center'>\r\n            <Typography\r\n              variant='h5'\r\n              align='center'\r\n              className={classes.subHeading}\r\n              gutterBottom\r\n            >\r\n              How many players?\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item container alignItems='center' justify='center'>\r\n            <Grid item xs={6} md={6}>\r\n              <Slider\r\n                min={1}\r\n                max={20}\r\n                defaultValue={2}\r\n                valueLabelFormat={participantLabel}\r\n                getAriaValueText={participantLabel}\r\n                aria-labelledby='discrete-slider-always'\r\n                step={1}\r\n                marks={null}\r\n                valueLabelDisplay='on'\r\n                style={{ width: '100%' }}\r\n                onChange={(event, value) =>\r\n                  setPriceData({\r\n                    ...priceData,\r\n                    players: parseInt(value),\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3} md={1}>\r\n              <img\r\n                src={playerIconImg}\r\n                alt='players'\r\n                className={classes.playerIcon}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justify='center'>\r\n            <Typography\r\n              variant='h5'\r\n              align='center'\r\n              className={classes.subHeading}\r\n              gutterBottom\r\n            >\r\n              How long would you play?\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item container justify='center' style={{ marginTop: '2em' }}>\r\n            <Grid item xs={10} md={8}>\r\n              <Slider\r\n                min={1}\r\n                max={10}\r\n                defaultValue={1}\r\n                valueLabelFormat={hoursLabel}\r\n                getAriaValueText={hoursLabel}\r\n                aria-labelledby='discrete-slider-always'\r\n                step={1}\r\n                marks={hoursMarks}\r\n                valueLabelDisplay='on'\r\n                style={{ width: '100%' }}\r\n                onChange={(event, value) =>\r\n                  setPriceData({\r\n                    ...priceData,\r\n                    hours: parseInt(value),\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justify='center'\r\n            style={{ marginTop: '3em', marginBottom: '3em' }}\r\n          >\r\n            <Grid item>\r\n              <Typography variant='h5' align='center' gutterBottom>\r\n                Price Est:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant='h5' align='center' gutterBottom>\r\n                {`$${calculatePrice()}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justify='center' style={{ marginBottom: '5em' }}>\r\n            <Grid item xs={10} md={8}>\r\n              <ContactForm message={createMsg()} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </PageHeader>\r\n  )\r\n}\r\n\r\nexport default Estimate\r\n"]},"metadata":{},"sourceType":"module"}