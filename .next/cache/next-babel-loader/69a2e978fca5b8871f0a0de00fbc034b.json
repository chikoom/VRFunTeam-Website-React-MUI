{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\contexts\\\\ThemeContext.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme } from '../ui/theme';\nconst ThemeUpdateContext = /*#__PURE__*/React.createContext();\nexport function useUpdateTheme() {\n  return useContext(ThemeUpdateContext);\n}\nexport function ThemeContextProvider({\n  children\n}) {\n  const {\n    0: isDarkTheme,\n    1: setIsDarkTheme\n  } = useState(false);\n\n  const toggleTheme = language => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n\n  return __jsx(ThemeUpdateContext.Provider, {\n    value: {\n      toggleTheme,\n      isDarkTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeProvider, {\n    theme: isDarkTheme ? darkTheme : lightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, children));\n}","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/contexts/ThemeContext.js"],"names":["React","useState","useContext","ThemeProvider","lightTheme","darkTheme","ThemeUpdateContext","createContext","useUpdateTheme","ThemeContextProvider","children","isDarkTheme","setIsDarkTheme","toggleTheme","language"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,aAAtC;AAEA,MAAMC,kBAAkB,gBAAGN,KAAK,CAACO,aAAN,EAA3B;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAON,UAAU,CAACI,kBAAD,CAAjB;AACD;AAED,OAAO,SAASG,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA4C;AACjD,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMY,WAAW,GAAGC,QAAQ,IAAI;AAC9BF,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIA,SACE,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEE,MAAAA,WAAF;AAAeF,MAAAA;AAAf,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,WAAW,GAAGN,SAAH,GAAeD,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,QADH,CADF,CADF;AAOD","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { lightTheme, darkTheme } from '../ui/theme'\r\n\r\nconst ThemeUpdateContext = React.createContext()\r\n\r\nexport function useUpdateTheme() {\r\n  return useContext(ThemeUpdateContext)\r\n}\r\n\r\nexport function ThemeContextProvider({ children }) {\r\n  const [isDarkTheme, setIsDarkTheme] = useState(false)\r\n  const toggleTheme = language => {\r\n    setIsDarkTheme(!isDarkTheme)\r\n  }\r\n\r\n  return (\r\n    <ThemeUpdateContext.Provider value={{ toggleTheme, isDarkTheme }}>\r\n      <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\r\n        {children}\r\n      </ThemeProvider>\r\n    </ThemeUpdateContext.Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}