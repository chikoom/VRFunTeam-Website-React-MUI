{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\ui\\\\parts\\\\CardsSlider.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({}));\nvar timeOutHandler;\nconst elements = [{\n  content: `It is a long established fact that a reader will be distracted\n    by the readable content of a page when looking at its layout.`,\n  subContent: `Idan Baron | SEO Chikoom inc`\n}, {\n  content: `Mow Mow Mow.`,\n  subContent: `Kundofoni | SEO FancyFeast inc`\n}, {\n  content: `lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum `,\n  subContent: `Moshiko MushMush | SEO DigiDigi inc`\n}];\n\nconst CardsSlider = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(0);\n  const {\n    0: slideEnter,\n    1: setSlideEnter\n  } = useState(true);\n  useEffect(() => {\n    return () => {\n      clearTimeout(timeOutHandler);\n    };\n  }, []);\n  return __jsx(Grid, {\n    container: true,\n    direction: 'row-reverse',\n    alignItems: \"center\",\n    justify: \"center\",\n    style: {\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, elements.map((element, index) => __jsx(Slide, {\n    key: element.subContent,\n    direction: slideEnter ? 'left' : 'right',\n    in: currentIndex === index && slideEnter,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    timeout: {\n      enter: 1000,\n      exit: 500\n    },\n    onEntered: () => {\n      timeOutHandler = setTimeout(() => {\n        setSlideEnter(false);\n      }, 3500);\n    },\n    onExited: () => {\n      if (currentIndex === elements.length - 1) setCurrentIndex(0);else setCurrentIndex(currentIndex + 1);\n      setSlideEnter(true);\n    } // style={{ position: 'absolute', width: '50%' }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"\\\"\", element.content, \"\\\"\"), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, element.subContent)))))))));\n};\n\nexport default CardsSlider;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/ui/parts/CardsSlider.jsx"],"names":["React","useEffect","useState","Switch","Paper","Slide","FormControlLabel","makeStyles","useTheme","Card","CardContent","Divider","Grid","Typography","useStyles","theme","timeOutHandler","elements","content","subContent","CardsSlider","props","classes","currentIndex","setCurrentIndex","slideEnter","setSlideEnter","clearTimeout","overflow","map","element","index","enter","exit","setTimeout","length","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({}))\r\nvar timeOutHandler\r\n\r\nconst elements = [\r\n  {\r\n    content: `It is a long established fact that a reader will be distracted\r\n    by the readable content of a page when looking at its layout.`,\r\n    subContent: `Idan Baron | SEO Chikoom inc`,\r\n  },\r\n  {\r\n    content: `Mow Mow Mow.`,\r\n    subContent: `Kundofoni | SEO FancyFeast inc`,\r\n  },\r\n  {\r\n    content: `lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum `,\r\n    subContent: `Moshiko MushMush | SEO DigiDigi inc`,\r\n  },\r\n]\r\n\r\nconst CardsSlider = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n  const [slideEnter, setSlideEnter] = useState(true)\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeOutHandler)\r\n    }\r\n  }, [])\r\n  return (\r\n    <Grid\r\n      container\r\n      direction={'row-reverse'}\r\n      alignItems='center'\r\n      justify='center'\r\n      style={{ overflow: 'hidden' }}\r\n    >\r\n      <Grid item md={6} xs={8}>\r\n        {elements.map((element, index) => (\r\n          <Slide\r\n            key={element.subContent}\r\n            direction={slideEnter ? 'left' : 'right'}\r\n            in={currentIndex === index && slideEnter}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={{\r\n              enter: 1000,\r\n              exit: 500,\r\n            }}\r\n            onEntered={() => {\r\n              timeOutHandler = setTimeout(() => {\r\n                setSlideEnter(false)\r\n              }, 3500)\r\n            }}\r\n            onExited={() => {\r\n              if (currentIndex === elements.length - 1) setCurrentIndex(0)\r\n              else setCurrentIndex(currentIndex + 1)\r\n              setSlideEnter(true)\r\n            }}\r\n            // style={{ position: 'absolute', width: '50%' }}\r\n          >\r\n            <Card>\r\n              <CardContent>\r\n                <Grid container direction='column'>\r\n                  <Grid item>\r\n                    <Typography variant='h5' style={{ fontWeight: 400 }}>\r\n                      \"{element.content}\"\r\n                    </Typography>\r\n                    <Divider />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant='subtitle2'>\r\n                      {element.subContent}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Slide>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CardsSlider\r\n"]},"metadata":{},"sourceType":"module"}