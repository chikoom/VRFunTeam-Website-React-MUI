{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\contexts\\\\LangContext.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { siteData } from './site_data';\nconst languages = ['en', 'he'];\nconst LangContext = /*#__PURE__*/React.createContext();\nexport function useLanguageContext() {\n  return useContext(LangContext);\n}\nexport function LangProvider({\n  children\n}) {\n  const {\n    0: language,\n    1: setLanguage\n  } = useState('en');\n\n  const changeLanguageTo = langString => {\n    console.log('Changing language to ', langString);\n    setLanguage(langString);\n  };\n\n  console.log(window.location.search);\n  const contextValue = {\n    siteData: siteData[language],\n    language,\n    languages,\n    changeLanguageTo\n  };\n  return __jsx(LangContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/contexts/LangContext.js"],"names":["React","useContext","useState","siteData","languages","LangContext","createContext","useLanguageContext","LangProvider","children","language","setLanguage","changeLanguageTo","langString","console","log","window","location","search","contextValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,MAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,CAAlB;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AACA,OAAO,SAASC,kBAAT,GAA8B;AACnC,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMU,gBAAgB,GAAGC,UAAU,IAAI;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,UAArC;AACAF,IAAAA,WAAW,CAACE,UAAD,CAAX;AACD,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAP,CAAgBC,MAA5B;AACA,QAAMC,YAAY,GAAG;AACnBhB,IAAAA,QAAQ,EAAEA,QAAQ,CAACO,QAAD,CADC;AAEnBA,IAAAA,QAFmB;AAGnBN,IAAAA,SAHmB;AAInBQ,IAAAA;AAJmB,GAArB;AAMA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CV,QAA5C,CADF;AAGD","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { siteData } from './site_data'\r\nconst languages = ['en', 'he']\r\n\r\nconst LangContext = React.createContext()\r\nexport function useLanguageContext() {\r\n  return useContext(LangContext)\r\n}\r\n\r\nexport function LangProvider({ children }) {\r\n  const [language, setLanguage] = useState('en')\r\n  const changeLanguageTo = langString => {\r\n    console.log('Changing language to ', langString)\r\n    setLanguage(langString)\r\n  }\r\n  console.log(window.location.search)\r\n  const contextValue = {\r\n    siteData: siteData[language],\r\n    language,\r\n    languages,\r\n    changeLanguageTo,\r\n  }\r\n  return (\r\n    <LangContext.Provider value={contextValue}>{children}</LangContext.Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}