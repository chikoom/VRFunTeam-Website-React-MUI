{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\callf\\\\Desktop\\\\DEV\\\\DigiDigi\\\\vr-nextjs\\\\src\\\\ui\\\\parts\\\\CardsSlider.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180\n  },\n  wrapper: {\n    width: 100 + theme.spacing(2)\n  },\n  paper: {\n    zIndex: 1,\n    position: 'relative',\n    margin: theme.spacing(1)\n  }\n}));\nconst elements = [{\n  content: `It is a long established fact that a reader will be distracted\n    by the readable content of a page when looking at its layout.`,\n  subContent: `Idan Baron | SEO Chikoom inc`\n}, {\n  content: `Mow Mow Mow.`,\n  subContent: `Kundofoni | SEO FancyFeast inc`\n}, {\n  content: `lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum `,\n  subContent: `Moshiko MushMush | SEO DigiDigi inc`\n}];\n\nconst CardsSlider = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: slides,\n    1: setSlides\n  } = useState([]);\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(0);\n  useEffect(() => {\n    const loadedCards = elements.map((element, index) => __jsx(Slide, {\n      direction: \"right\",\n      in: currentIndex === index,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, element.content), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    })), __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, __jsx(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, element.subContent)))))));\n    setSlides[loadedCards];\n  }, []);\n\n  const handleChange = () => {\n    setChecked(prev => !prev);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, slides[currentIndex]));\n};\n\nexport default CardsSlider;","map":{"version":3,"sources":["C:/Users/callf/Desktop/DEV/DigiDigi/vr-nextjs/src/ui/parts/CardsSlider.jsx"],"names":["React","useEffect","useState","Switch","Paper","Slide","FormControlLabel","makeStyles","useTheme","Card","CardContent","Divider","Grid","Typography","useStyles","theme","root","height","wrapper","width","spacing","paper","zIndex","position","margin","elements","content","subContent","CardsSlider","props","classes","slides","setSlides","currentIndex","setCurrentIndex","loadedCards","map","element","index","handleChange","setChecked","prev"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { Card, CardContent, Divider, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  wrapper: {\r\n    width: 100 + theme.spacing(2),\r\n  },\r\n  paper: {\r\n    zIndex: 1,\r\n    position: 'relative',\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst elements = [\r\n  {\r\n    content: `It is a long established fact that a reader will be distracted\r\n    by the readable content of a page when looking at its layout.`,\r\n    subContent: `Idan Baron | SEO Chikoom inc`,\r\n  },\r\n  {\r\n    content: `Mow Mow Mow.`,\r\n    subContent: `Kundofoni | SEO FancyFeast inc`,\r\n  },\r\n  {\r\n    content: `lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum `,\r\n    subContent: `Moshiko MushMush | SEO DigiDigi inc`,\r\n  },\r\n]\r\n\r\nconst CardsSlider = props => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [slides, setSlides] = useState([])\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const loadedCards = elements.map((element, index) => (\r\n      <Slide\r\n        direction='right'\r\n        in={currentIndex === index}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <Card>\r\n          <CardContent>\r\n            <Grid container direction='column'>\r\n              <Grid item>\r\n                <Typography variant='body1'>{element.content}</Typography>\r\n                <Divider />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant='subtitle2'>\r\n                  {element.subContent}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Slide>\r\n    ))\r\n    setSlides[loadedCards]\r\n  }, [])\r\n\r\n  const handleChange = () => {\r\n    setChecked(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>{slides[currentIndex]}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardsSlider\r\n"]},"metadata":{},"sourceType":"module"}