{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useLanguageContext } from '../../../src/contexts/LangContext';\nconst useStyles = makeStyles(theme => ({}));\n\nconst QnA = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const {\n    siteData,\n    language\n  } = useLanguageContext();\n  return __jsx(React.Fragment, null, siteData.faq.data.map((question, index) => __jsx(Accordion, {\n    expanded: expanded === `panel${index}`,\n    onChange: handleChange(`panel${index}`)\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": `panel${index}a-content`,\n    id: `panel${index}a-header`\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, question.title)), __jsx(AccordionDetails, null, __jsx(Typography, {\n    variant: \"body1\",\n    dangerouslySetInnerHTML: createMarkup(question['text'])\n  })))));\n};\n\nexport default QnA;\n\nfunction createMarkup(content) {\n  return {\n    __html: content\n  };\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}